--
-- PostgreSQL database dump
--

-- Dumped from database version 16.9 (63f4182)
-- Dumped by pg_dump version 16.9

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: analytics; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.analytics (
    id integer NOT NULL,
    metric text NOT NULL,
    value real NOT NULL,
    dimensions jsonb DEFAULT '{}'::jsonb,
    "timestamp" timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.analytics OWNER TO neondb_owner;

--
-- Name: analytics_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.analytics ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.analytics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: app_settings; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.app_settings (
    id integer NOT NULL,
    key text NOT NULL,
    value jsonb NOT NULL,
    description text,
    category text DEFAULT 'general'::text,
    updated_by integer,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.app_settings OWNER TO neondb_owner;

--
-- Name: app_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.app_settings_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.app_settings_id_seq OWNER TO neondb_owner;

--
-- Name: app_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.app_settings_id_seq OWNED BY public.app_settings.id;


--
-- Name: business_info; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.business_info (
    id integer NOT NULL,
    company_name text DEFAULT 'Returnly'::text,
    tagline text DEFAULT 'Making Returns Effortless'::text,
    description text,
    headquarters text DEFAULT 'St. Louis, MO'::text,
    support_email text DEFAULT 'support@returnly.com'::text,
    support_phone text DEFAULT '(555) 123-4567'::text,
    business_hours text DEFAULT 'Mon–Sat, 8 AM – 8 PM CST'::text,
    instagram_handle text DEFAULT '@ReturnlyApp'::text,
    facebook_url text DEFAULT 'facebook.com/Returnly'::text,
    twitter_handle text DEFAULT '@Returnly'::text,
    mission_statement text,
    founding_story text,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.business_info OWNER TO neondb_owner;

--
-- Name: business_info_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.business_info ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.business_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: companies; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.companies (
    id integer NOT NULL,
    name text NOT NULL,
    slug text NOT NULL,
    category text NOT NULL,
    description text,
    logo_url text,
    website_url text,
    headquarters text,
    st_louis_locations jsonb DEFAULT '[]'::jsonb,
    service_radius integer DEFAULT 25,
    business_type text NOT NULL,
    founded_year integer,
    employee_count text,
    prefers_in_store boolean DEFAULT false,
    allows_mail_returns boolean DEFAULT true,
    uses_return_it_service boolean DEFAULT true,
    is_active boolean DEFAULT true,
    is_featured boolean DEFAULT false,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);


ALTER TABLE public.companies OWNER TO neondb_owner;

--
-- Name: companies_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.companies ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.companies_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: customer_waitlist; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.customer_waitlist (
    id integer NOT NULL,
    email text NOT NULL,
    first_name text NOT NULL,
    last_name text NOT NULL,
    phone text NOT NULL,
    street_address text NOT NULL,
    city text NOT NULL,
    state text NOT NULL,
    zip_code text NOT NULL,
    coordinates jsonb,
    address_verified boolean DEFAULT false,
    status text DEFAULT 'waitlist'::text,
    projected_launch_date timestamp without time zone,
    notification_preferences jsonb DEFAULT '{}'::jsonb,
    referral_code text,
    referred_by integer,
    marketing_opt_in boolean DEFAULT true,
    launched_at timestamp without time zone,
    notified_at timestamp without time zone,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.customer_waitlist OWNER TO neondb_owner;

--
-- Name: customer_waitlist_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.customer_waitlist_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.customer_waitlist_id_seq OWNER TO neondb_owner;

--
-- Name: customer_waitlist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.customer_waitlist_id_seq OWNED BY public.customer_waitlist.id;


--
-- Name: driver_earnings; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.driver_earnings (
    id integer NOT NULL,
    driver_id integer NOT NULL,
    order_id text NOT NULL,
    base_earning real NOT NULL,
    tip_earning real DEFAULT 0,
    bonus_earning real DEFAULT 0,
    total_earning real NOT NULL,
    status text DEFAULT 'pending'::text,
    paid_at timestamp without time zone,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.driver_earnings OWNER TO neondb_owner;

--
-- Name: driver_earnings_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.driver_earnings ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.driver_earnings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: driver_incentives; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.driver_incentives (
    id integer NOT NULL,
    driver_id integer NOT NULL,
    order_id text,
    incentive_type text NOT NULL,
    description text NOT NULL,
    amount real NOT NULL,
    is_active boolean DEFAULT true,
    qualification_criteria jsonb DEFAULT '{}'::jsonb,
    package_size text,
    multi_stop_count integer,
    peak_season_multiplier real,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    earned_at timestamp without time zone
);


ALTER TABLE public.driver_incentives OWNER TO neondb_owner;

--
-- Name: driver_incentives_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.driver_incentives ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.driver_incentives_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: driver_location_pings; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.driver_location_pings (
    id integer NOT NULL,
    driver_id integer NOT NULL,
    order_id text,
    location jsonb NOT NULL,
    "timestamp" timestamp without time zone DEFAULT now() NOT NULL,
    is_online boolean DEFAULT true NOT NULL,
    is_on_delivery boolean DEFAULT false NOT NULL,
    battery_level integer,
    network_type text,
    accuracy real,
    source text DEFAULT 'mobile_app'::text NOT NULL
);


ALTER TABLE public.driver_location_pings OWNER TO neondb_owner;

--
-- Name: driver_location_pings_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.driver_location_pings_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.driver_location_pings_id_seq OWNER TO neondb_owner;

--
-- Name: driver_location_pings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.driver_location_pings_id_seq OWNED BY public.driver_location_pings.id;


--
-- Name: driver_order_assignments; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.driver_order_assignments (
    id integer NOT NULL,
    order_id text NOT NULL,
    driver_id integer NOT NULL,
    assignment_type text DEFAULT 'offer'::text NOT NULL,
    status text DEFAULT 'pending'::text NOT NULL,
    offer_expires_at timestamp without time zone,
    responded_at timestamp without time zone,
    assignment_priority integer DEFAULT 1,
    estimated_distance real,
    estimated_duration integer,
    driver_location jsonb,
    decline_reason text,
    reassignment_count integer DEFAULT 0,
    metadata jsonb DEFAULT '{}'::jsonb,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.driver_order_assignments OWNER TO neondb_owner;

--
-- Name: driver_order_assignments_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.driver_order_assignments_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.driver_order_assignments_id_seq OWNER TO neondb_owner;

--
-- Name: driver_order_assignments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.driver_order_assignments_id_seq OWNED BY public.driver_order_assignments.id;


--
-- Name: driver_payouts; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.driver_payouts (
    id integer NOT NULL,
    driver_id integer NOT NULL,
    payout_type text NOT NULL,
    total_amount real NOT NULL,
    fee_amount real DEFAULT 0,
    net_amount real NOT NULL,
    stripe_transfer_id text,
    status text DEFAULT 'pending'::text,
    order_ids jsonb DEFAULT '[]'::jsonb,
    tax_year integer NOT NULL,
    form_1099_generated boolean DEFAULT false,
    form_1099_url text,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    completed_at timestamp without time zone
);


ALTER TABLE public.driver_payouts OWNER TO neondb_owner;

--
-- Name: driver_payouts_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.driver_payouts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.driver_payouts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: merchant_policies; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.merchant_policies (
    id integer NOT NULL,
    merchant_id text NOT NULL,
    store_name text NOT NULL,
    policy jsonb DEFAULT '{"refundMethod": "original_payment", "tagsRequired": true, "restockingFee": {"enabled": false, "percentage": 0}, "receiptRequired": true, "holidayExtension": {"end": null, "start": null, "enabled": false}, "returnWindowDays": 30, "allowedCategories": [], "excludedCategories": [], "originalPackagingRequired": false}'::jsonb NOT NULL,
    is_active boolean DEFAULT true NOT NULL,
    last_updated_by text,
    notes text,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.merchant_policies OWNER TO neondb_owner;

--
-- Name: merchant_policies_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.merchant_policies_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.merchant_policies_id_seq OWNER TO neondb_owner;

--
-- Name: merchant_policies_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.merchant_policies_id_seq OWNED BY public.merchant_policies.id;


--
-- Name: notifications; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.notifications (
    id integer NOT NULL,
    user_id integer NOT NULL,
    type text NOT NULL,
    title text NOT NULL,
    message text NOT NULL,
    data jsonb DEFAULT '{}'::jsonb,
    is_read boolean DEFAULT false,
    channel text DEFAULT 'app'::text,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.notifications OWNER TO neondb_owner;

--
-- Name: notifications_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.notifications ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.notifications_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: order_audit_logs; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.order_audit_logs (
    id integer NOT NULL,
    order_id text NOT NULL,
    action text NOT NULL,
    performed_by integer,
    performed_by_role text NOT NULL,
    old_value jsonb,
    new_value jsonb,
    metadata jsonb,
    ip_address text,
    user_agent text,
    "timestamp" timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.order_audit_logs OWNER TO neondb_owner;

--
-- Name: order_audit_logs_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.order_audit_logs_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.order_audit_logs_id_seq OWNER TO neondb_owner;

--
-- Name: order_audit_logs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.order_audit_logs_id_seq OWNED BY public.order_audit_logs.id;


--
-- Name: order_cancellations; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.order_cancellations (
    id integer NOT NULL,
    order_id text NOT NULL,
    cancellation_type text NOT NULL,
    cancelled_by integer,
    driver_id integer,
    cancellation_reason text NOT NULL,
    cancellation_details text,
    store_id integer,
    refund_amount real,
    driver_compensation real,
    photos jsonb DEFAULT '[]'::jsonb,
    customer_notified boolean DEFAULT false,
    driver_notified boolean DEFAULT false,
    reassign_attempted boolean DEFAULT false,
    escalated_to_support boolean DEFAULT false,
    resolution_notes text,
    resolved_by integer,
    resolved_at timestamp without time zone,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.order_cancellations OWNER TO neondb_owner;

--
-- Name: order_cancellations_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.order_cancellations_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.order_cancellations_id_seq OWNER TO neondb_owner;

--
-- Name: order_cancellations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.order_cancellations_id_seq OWNED BY public.order_cancellations.id;


--
-- Name: order_status_history; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.order_status_history (
    id integer NOT NULL,
    order_id text NOT NULL,
    previous_status text,
    new_status text NOT NULL,
    status_reason text,
    triggered_by integer,
    trigger_type text DEFAULT 'manual'::text NOT NULL,
    driver_id integer,
    location jsonb,
    metadata jsonb DEFAULT '{}'::jsonb,
    estimated_time timestamp without time zone,
    actual_time timestamp without time zone DEFAULT now() NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.order_status_history OWNER TO neondb_owner;

--
-- Name: order_status_history_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.order_status_history_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.order_status_history_id_seq OWNER TO neondb_owner;

--
-- Name: order_status_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.order_status_history_id_seq OWNED BY public.order_status_history.id;


--
-- Name: orders; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.orders (
    id text NOT NULL,
    user_id integer NOT NULL,
    status text DEFAULT 'created'::text NOT NULL,
    tracking_number text,
    pickup_address text NOT NULL,
    pickup_coordinates jsonb,
    pickup_instructions text,
    pickup_window jsonb,
    scheduled_pickup_time timestamp without time zone,
    actual_pickup_time timestamp without time zone,
    retailer text NOT NULL,
    return_address text,
    return_coordinates jsonb,
    item_description text NOT NULL,
    item_category text,
    item_photos jsonb DEFAULT '[]'::jsonb,
    return_reason text,
    original_order_number text,
    base_price real DEFAULT 3.99,
    surcharges jsonb DEFAULT '[]'::jsonb,
    discount_code text,
    discount_amount real DEFAULT 0,
    total_price real,
    tip real DEFAULT 0,
    stripe_payment_intent_id text,
    stripe_charge_id text,
    payment_status text DEFAULT 'pending'::text,
    customer_paid real,
    driver_earning real,
    returnly_fee real,
    size_bonus_amount real DEFAULT 0,
    peak_season_bonus real DEFAULT 0,
    multi_stop_bonus real DEFAULT 0,
    driver_payout_status text DEFAULT 'pending'::text,
    driver_id integer,
    driver_assigned_at timestamp without time zone,
    estimated_delivery_time timestamp without time zone,
    actual_delivery_time timestamp without time zone,
    status_history jsonb DEFAULT '[]'::jsonb,
    customer_notes text,
    driver_notes text,
    admin_notes text,
    notifications jsonb DEFAULT '[]'::jsonb,
    customer_rating integer,
    driver_rating integer,
    customer_feedback text,
    driver_feedback text,
    priority text DEFAULT 'standard'::text,
    is_fragile boolean DEFAULT false,
    requires_signature boolean DEFAULT false,
    insurance_value real,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    pickup_street_address text,
    pickup_city text,
    pickup_state text,
    pickup_zip_code text,
    retailer_location jsonb,
    box_size text,
    number_of_boxes integer DEFAULT 1,
    size_upcharge real DEFAULT 0,
    multi_box_fee real DEFAULT 0,
    estimated_weight text,
    tracking_enabled boolean DEFAULT true NOT NULL,
    tracking_expires_at timestamp without time zone,
    pickup_location jsonb,
    accepts_liability_terms boolean DEFAULT false,
    purchase_type text,
    has_original_tags boolean DEFAULT false NOT NULL,
    receipt_uploaded boolean DEFAULT false NOT NULL,
    external_order_id text,
    api_metadata jsonb DEFAULT '{}'::jsonb,
    created_via_api boolean DEFAULT false,
    api_key_id integer
);


ALTER TABLE public.orders OWNER TO neondb_owner;

--
-- Name: promo_codes; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.promo_codes (
    id integer NOT NULL,
    code text NOT NULL,
    description text,
    discount_type text NOT NULL,
    discount_value real NOT NULL,
    min_order_value real DEFAULT 0,
    max_uses integer,
    current_uses integer DEFAULT 0,
    is_active boolean DEFAULT true,
    valid_from timestamp without time zone DEFAULT now(),
    valid_until timestamp without time zone,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.promo_codes OWNER TO neondb_owner;

--
-- Name: promo_codes_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.promo_codes ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.promo_codes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: retailer_accounts; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.retailer_accounts (
    id integer NOT NULL,
    user_id integer NOT NULL,
    company_id integer NOT NULL,
    role text DEFAULT 'admin'::text NOT NULL,
    permissions jsonb DEFAULT '[]'::jsonb,
    is_active boolean DEFAULT true NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.retailer_accounts OWNER TO neondb_owner;

--
-- Name: retailer_accounts_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.retailer_accounts_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.retailer_accounts_id_seq OWNER TO neondb_owner;

--
-- Name: retailer_accounts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.retailer_accounts_id_seq OWNED BY public.retailer_accounts.id;


--
-- Name: retailer_api_keys; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.retailer_api_keys (
    id integer NOT NULL,
    company_id integer NOT NULL,
    name text NOT NULL,
    key_prefix text NOT NULL,
    key_hash text NOT NULL,
    permissions jsonb DEFAULT '[]'::jsonb,
    scopes jsonb DEFAULT '[]'::jsonb,
    is_active boolean DEFAULT true NOT NULL,
    last_used_at timestamp without time zone,
    expires_at timestamp without time zone,
    rate_limit integer DEFAULT 1000,
    current_usage integer DEFAULT 0,
    created_by integer NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    revoked_at timestamp without time zone
);


ALTER TABLE public.retailer_api_keys OWNER TO neondb_owner;

--
-- Name: retailer_api_keys_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.retailer_api_keys_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.retailer_api_keys_id_seq OWNER TO neondb_owner;

--
-- Name: retailer_api_keys_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.retailer_api_keys_id_seq OWNED BY public.retailer_api_keys.id;


--
-- Name: retailer_invoices; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.retailer_invoices (
    id integer NOT NULL,
    company_id integer NOT NULL,
    subscription_id integer,
    stripe_invoice_id text,
    stripe_payment_intent_id text,
    invoice_number text NOT NULL,
    invoice_date timestamp without time zone DEFAULT now() NOT NULL,
    due_date timestamp without time zone NOT NULL,
    paid_at timestamp without time zone,
    subtotal real NOT NULL,
    tax real DEFAULT 0,
    total real NOT NULL,
    amount_paid real DEFAULT 0,
    amount_due real NOT NULL,
    line_items jsonb DEFAULT '[]'::jsonb,
    status text DEFAULT 'draft'::text NOT NULL,
    period_start timestamp without time zone NOT NULL,
    period_end timestamp without time zone NOT NULL,
    pdf_url text,
    notes text,
    metadata jsonb DEFAULT '{}'::jsonb,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.retailer_invoices OWNER TO neondb_owner;

--
-- Name: retailer_invoices_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.retailer_invoices_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.retailer_invoices_id_seq OWNER TO neondb_owner;

--
-- Name: retailer_invoices_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.retailer_invoices_id_seq OWNED BY public.retailer_invoices.id;


--
-- Name: retailer_subscriptions; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.retailer_subscriptions (
    id integer NOT NULL,
    company_id integer NOT NULL,
    stripe_customer_id text NOT NULL,
    stripe_subscription_id text,
    stripe_price_id text,
    plan_type text DEFAULT 'standard'::text NOT NULL,
    billing_cycle text DEFAULT 'monthly'::text NOT NULL,
    monthly_fee real DEFAULT 0 NOT NULL,
    transaction_fee real DEFAULT 0,
    status text DEFAULT 'active'::text NOT NULL,
    current_period_start timestamp without time zone,
    current_period_end timestamp without time zone,
    cancel_at_period_end boolean DEFAULT false,
    canceled_at timestamp without time zone,
    included_orders integer DEFAULT 0,
    total_orders integer DEFAULT 0,
    current_month_orders integer DEFAULT 0,
    trial_ends_at timestamp without time zone,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.retailer_subscriptions OWNER TO neondb_owner;

--
-- Name: retailer_subscriptions_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.retailer_subscriptions_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.retailer_subscriptions_id_seq OWNER TO neondb_owner;

--
-- Name: retailer_subscriptions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.retailer_subscriptions_id_seq OWNED BY public.retailer_subscriptions.id;


--
-- Name: retailer_usage_metrics; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.retailer_usage_metrics (
    id integer NOT NULL,
    company_id integer NOT NULL,
    date timestamp without time zone NOT NULL,
    orders_created integer DEFAULT 0,
    orders_completed integer DEFAULT 0,
    orders_cancelled integer DEFAULT 0,
    total_order_value real DEFAULT 0,
    api_requests_total integer DEFAULT 0,
    api_requests_successful integer DEFAULT 0,
    api_requests_failed integer DEFAULT 0,
    webhooks_delivered integer DEFAULT 0,
    webhooks_failed integer DEFAULT 0,
    revenue_generated real DEFAULT 0,
    fees_charged real DEFAULT 0,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.retailer_usage_metrics OWNER TO neondb_owner;

--
-- Name: retailer_usage_metrics_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.retailer_usage_metrics_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.retailer_usage_metrics_id_seq OWNER TO neondb_owner;

--
-- Name: retailer_usage_metrics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.retailer_usage_metrics_id_seq OWNED BY public.retailer_usage_metrics.id;


--
-- Name: retailer_webhook_deliveries; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.retailer_webhook_deliveries (
    id integer NOT NULL,
    webhook_id integer NOT NULL,
    event_type text NOT NULL,
    order_id text,
    request_payload jsonb NOT NULL,
    request_headers jsonb DEFAULT '{}'::jsonb,
    response_status integer,
    response_body text,
    response_headers jsonb,
    attempt_number integer DEFAULT 1 NOT NULL,
    duration_ms integer,
    is_successful boolean DEFAULT false,
    error_message text,
    next_retry_at timestamp without time zone,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.retailer_webhook_deliveries OWNER TO neondb_owner;

--
-- Name: retailer_webhook_deliveries_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.retailer_webhook_deliveries_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.retailer_webhook_deliveries_id_seq OWNER TO neondb_owner;

--
-- Name: retailer_webhook_deliveries_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.retailer_webhook_deliveries_id_seq OWNED BY public.retailer_webhook_deliveries.id;


--
-- Name: retailer_webhooks; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.retailer_webhooks (
    id integer NOT NULL,
    company_id integer NOT NULL,
    url text NOT NULL,
    name text NOT NULL,
    description text,
    secret text NOT NULL,
    subscribed_events jsonb DEFAULT '[]'::jsonb NOT NULL,
    is_active boolean DEFAULT true NOT NULL,
    last_triggered_at timestamp without time zone,
    last_success_at timestamp without time zone,
    last_failure_at timestamp without time zone,
    consecutive_failures integer DEFAULT 0,
    max_retries integer DEFAULT 3,
    retry_backoff_multiplier integer DEFAULT 2,
    timeout_seconds integer DEFAULT 10,
    metadata jsonb DEFAULT '{}'::jsonb,
    created_by integer NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.retailer_webhooks OWNER TO neondb_owner;

--
-- Name: retailer_webhooks_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.retailer_webhooks_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.retailer_webhooks_id_seq OWNER TO neondb_owner;

--
-- Name: retailer_webhooks_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.retailer_webhooks_id_seq OWNED BY public.retailer_webhooks.id;


--
-- Name: store_locations; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.store_locations (
    id integer NOT NULL,
    retailer_name text NOT NULL,
    store_name text NOT NULL,
    store_number text,
    street_address text NOT NULL,
    city text NOT NULL,
    state text NOT NULL,
    zip_code text NOT NULL,
    phone_number text,
    coordinates jsonb NOT NULL,
    store_hours jsonb DEFAULT '{}'::jsonb,
    services jsonb DEFAULT '[]'::jsonb,
    return_policy jsonb DEFAULT '{}'::jsonb,
    is_active boolean DEFAULT true NOT NULL,
    accepts_returns boolean DEFAULT true NOT NULL,
    has_pickup_service boolean DEFAULT false NOT NULL,
    max_return_value real,
    special_instructions text,
    last_verified timestamp without time zone DEFAULT now() NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.store_locations OWNER TO neondb_owner;

--
-- Name: store_locations_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.store_locations_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.store_locations_id_seq OWNER TO neondb_owner;

--
-- Name: store_locations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: neondb_owner
--

ALTER SEQUENCE public.store_locations_id_seq OWNED BY public.store_locations.id;


--
-- Name: user_sessions; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.user_sessions (
    sid character varying NOT NULL,
    sess json NOT NULL,
    expire timestamp(6) without time zone NOT NULL
);


ALTER TABLE public.user_sessions OWNER TO neondb_owner;

--
-- Name: users; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.users (
    id integer NOT NULL,
    email text NOT NULL,
    password text NOT NULL,
    first_name text,
    last_name text,
    phone text,
    is_driver boolean DEFAULT false NOT NULL,
    is_admin boolean DEFAULT false NOT NULL,
    is_active boolean DEFAULT true NOT NULL,
    profile_image text,
    preferences jsonb DEFAULT '{}'::jsonb,
    addresses jsonb DEFAULT '[]'::jsonb,
    payment_methods jsonb DEFAULT '[]'::jsonb,
    driver_license text,
    vehicle_info jsonb,
    bank_info jsonb,
    driver_rating real DEFAULT 5,
    total_earnings real DEFAULT 0,
    completed_deliveries integer DEFAULT 0,
    is_online boolean DEFAULT false,
    current_location jsonb,
    stripe_connect_account_id text,
    stripe_onboarding_complete boolean DEFAULT false,
    payment_preference text DEFAULT 'weekly'::text,
    instant_pay_fee real DEFAULT 1,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    date_of_birth text,
    role text DEFAULT 'customer'::text,
    department text,
    employee_id text,
    permissions jsonb DEFAULT '[]'::jsonb,
    tutorial_completed boolean DEFAULT false,
    hire_date timestamp without time zone,
    assigned_city text DEFAULT 'st-louis'::text,
    service_zones jsonb DEFAULT '[]'::jsonb,
    emergency_contacts jsonb DEFAULT '[]'::jsonb,
    last_safety_check timestamp without time zone,
    available_hours jsonb DEFAULT '{}'::jsonb,
    preferred_routes jsonb DEFAULT '[]'::jsonb,
    service_radius real DEFAULT 25.0,
    application_status text DEFAULT 'pending_review'::text,
    onboarding_step text DEFAULT 'signup'::text,
    projected_hire_date timestamp without time zone,
    approved_at timestamp without time zone,
    rejected_at timestamp without time zone,
    rejection_reason text,
    otp_verified boolean DEFAULT false,
    terms_accepted_at timestamp without time zone,
    vehicle_make text,
    vehicle_model text,
    vehicle_year integer,
    vehicle_color text,
    vehicle_type text,
    license_plate text,
    background_check_consent boolean DEFAULT false,
    background_check_consented_at timestamp without time zone,
    vehicle_insurance jsonb,
    background_check_status text DEFAULT 'not_started'::text,
    background_check_id text,
    background_check_completed_at timestamp without time zone,
    background_check_results jsonb,
    account_deletion_requested boolean DEFAULT false,
    data_export_requested boolean DEFAULT false,
    deleted_at timestamp without time zone,
    data_export_requested_at timestamp without time zone
);


ALTER TABLE public.users OWNER TO neondb_owner;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: app_settings id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.app_settings ALTER COLUMN id SET DEFAULT nextval('public.app_settings_id_seq'::regclass);


--
-- Name: customer_waitlist id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.customer_waitlist ALTER COLUMN id SET DEFAULT nextval('public.customer_waitlist_id_seq'::regclass);


--
-- Name: driver_location_pings id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_location_pings ALTER COLUMN id SET DEFAULT nextval('public.driver_location_pings_id_seq'::regclass);


--
-- Name: driver_order_assignments id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_order_assignments ALTER COLUMN id SET DEFAULT nextval('public.driver_order_assignments_id_seq'::regclass);


--
-- Name: merchant_policies id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.merchant_policies ALTER COLUMN id SET DEFAULT nextval('public.merchant_policies_id_seq'::regclass);


--
-- Name: order_audit_logs id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_audit_logs ALTER COLUMN id SET DEFAULT nextval('public.order_audit_logs_id_seq'::regclass);


--
-- Name: order_cancellations id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_cancellations ALTER COLUMN id SET DEFAULT nextval('public.order_cancellations_id_seq'::regclass);


--
-- Name: order_status_history id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_status_history ALTER COLUMN id SET DEFAULT nextval('public.order_status_history_id_seq'::regclass);


--
-- Name: retailer_accounts id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_accounts ALTER COLUMN id SET DEFAULT nextval('public.retailer_accounts_id_seq'::regclass);


--
-- Name: retailer_api_keys id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_api_keys ALTER COLUMN id SET DEFAULT nextval('public.retailer_api_keys_id_seq'::regclass);


--
-- Name: retailer_invoices id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_invoices ALTER COLUMN id SET DEFAULT nextval('public.retailer_invoices_id_seq'::regclass);


--
-- Name: retailer_subscriptions id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_subscriptions ALTER COLUMN id SET DEFAULT nextval('public.retailer_subscriptions_id_seq'::regclass);


--
-- Name: retailer_usage_metrics id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_usage_metrics ALTER COLUMN id SET DEFAULT nextval('public.retailer_usage_metrics_id_seq'::regclass);


--
-- Name: retailer_webhook_deliveries id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_webhook_deliveries ALTER COLUMN id SET DEFAULT nextval('public.retailer_webhook_deliveries_id_seq'::regclass);


--
-- Name: retailer_webhooks id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_webhooks ALTER COLUMN id SET DEFAULT nextval('public.retailer_webhooks_id_seq'::regclass);


--
-- Name: store_locations id; Type: DEFAULT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.store_locations ALTER COLUMN id SET DEFAULT nextval('public.store_locations_id_seq'::regclass);


--
-- Data for Name: analytics; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.analytics (id, metric, value, dimensions, "timestamp") FROM stdin;
\.


--
-- Data for Name: app_settings; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.app_settings (id, key, value, description, category, updated_by, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: business_info; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.business_info (id, company_name, tagline, description, headquarters, support_email, support_phone, business_hours, instagram_handle, facebook_url, twitter_handle, mission_statement, founding_story, updated_at) FROM stdin;
\.


--
-- Data for Name: companies; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.companies (id, name, slug, category, description, logo_url, website_url, headquarters, st_louis_locations, service_radius, business_type, founded_year, employee_count, prefers_in_store, allows_mail_returns, uses_return_it_service, is_active, is_featured, created_at, updated_at) FROM stdin;
1	Dillard's	dillards	department_store	Upscale department store with clothing, accessories, cosmetics, and home goods	\N	https://www.dillards.com	Little Rock, AR	[{"name": "West County Mall", "address": "11215 W County Center Dr, Des Peres, MO 63131"}, {"name": "South County Center", "address": "18 S County Center, St. Louis, MO 63129"}]	25	national	1938	10,000+	f	t	t	t	t	2025-10-02 02:30:37.723584	2025-10-02 02:30:37.723584
2	Macy's	macys	department_store	National department store chain with fashion, home, and beauty products	\N	https://www.macys.com	New York, NY	[{"name": "West County Center", "address": "11911 W County Center Dr, Des Peres, MO 63131"}, {"name": "Chesterfield Mall", "address": "291 Chesterfield Mall, Chesterfield, MO 63017"}]	25	national	1858	50,000+	f	t	t	t	t	2025-10-02 02:30:37.853657	2025-10-02 02:30:37.853657
3	Local Jones	local-jones	clothing	Local St. Louis boutique featuring contemporary women's fashion and accessories	\N	https://www.localjones.com	St. Louis, MO	[{"name": "Clayton Store", "address": "7371 Forsyth Blvd, Clayton, MO 63105"}, {"name": "Central West End", "address": "4622 Maryland Ave, St. Louis, MO 63108"}]	25	local	2015	11-50	t	t	t	t	t	2025-10-02 02:30:37.948286	2025-10-02 02:30:37.948286
4	Best Buy	best-buy	electronics	Consumer electronics retailer with computers, phones, appliances, and more	\N	https://www.bestbuy.com	Richfield, MN	[{"name": "Brentwood", "address": "2625 S Brentwood Blvd, Brentwood, MO 63144"}, {"name": "Chesterfield", "address": "17045 N Outer 40 Rd, Chesterfield, MO 63005"}, {"name": "Bridgeton", "address": "3045 N Lindbergh Blvd, Bridgeton, MO 63043"}]	25	national	1966	50,000+	f	t	t	t	t	2025-10-02 02:30:38.039791	2025-10-02 02:30:38.039791
5	Home Depot	home-depot	home_goods	Home improvement retailer with tools, building supplies, and garden center	\N	https://www.homedepot.com	Atlanta, GA	[{"name": "Brentwood", "address": "8645 Eager Rd, Brentwood, MO 63144"}, {"name": "Kirkwood", "address": "10423 Manchester Rd, Kirkwood, MO 63122"}, {"name": "Florissant", "address": "14577 New Halls Ferry Rd, Florissant, MO 63031"}]	25	national	1978	50,000+	f	t	t	t	f	2025-10-02 02:30:38.137417	2025-10-02 02:30:38.137417
6	Nordstrom Rack	nordstrom-rack	clothing	Off-price retail division of Nordstrom with designer brands at reduced prices	\N	https://www.nordstromrack.com	Seattle, WA	[{"name": "Brentwood", "address": "1517 S Brentwood Blvd, Brentwood, MO 63144"}]	25	national	1973	10,000+	f	t	t	t	t	2025-10-02 02:30:38.232697	2025-10-02 02:30:38.232697
7	Putt N' Around	putt-n-around	sporting_goods	Local St. Louis golf equipment and accessories retailer	\N	https://www.puttnaround.com	St. Louis, MO	[{"name": "Main Store", "address": "12345 Olive Blvd, Creve Coeur, MO 63141"}]	25	local	1995	11-50	t	t	t	t	f	2025-10-02 02:30:38.325564	2025-10-02 02:30:38.325564
8	CVS Pharmacy	cvs-pharmacy	pharmacy	Pharmacy chain with health, beauty, and convenience products	\N	https://www.cvs.com	Woonsocket, RI	[{"name": "Clayton", "address": "8001 Bonhomme Ave, Clayton, MO 63105"}, {"name": "Webster Groves", "address": "8888 Ladue Rd, Webster Groves, MO 63119"}]	25	national	1963	50,000+	f	t	t	t	f	2025-10-02 02:30:38.418068	2025-10-02 02:30:38.418068
\.


--
-- Data for Name: customer_waitlist; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.customer_waitlist (id, email, first_name, last_name, phone, street_address, city, state, zip_code, coordinates, address_verified, status, projected_launch_date, notification_preferences, referral_code, referred_by, marketing_opt_in, launched_at, notified_at, created_at, updated_at) FROM stdin;
1	john.doe.test@example.com	John	Doe	555-123-4567	123 Main Street	St. Louis	MO	63101	\N	f	waitlist	2025-11-12 01:51:51.555	"{\\"email\\":true,\\"sms\\":true}"	\N	\N	t	\N	\N	2025-09-27 07:20:23.323875	2025-09-27 07:20:23.323875
2	john.doe.test+YSgo8o@example.com	John	Doe	5551234567	123 Main Street, Apt 4B	St. Louis	MO	63101	\N	f	waitlist	2025-10-27 08:23:49.353	"{\\"email\\":true,\\"sms\\":true}"	\N	\N	t	\N	\N	2025-09-27 07:22:52.976627	2025-09-27 07:22:52.976627
3	sarah.johnson.test.Z3gGRx@example.com	Sarah	Johnson	555-987-6543	456 Oak Avenue	Kansas City	MO	64111	\N	f	waitlist	2025-11-16 07:28:01.059	"{\\"email\\":true,\\"sms\\":true}"	\N	\N	t	\N	\N	2025-09-27 07:27:40.18872	2025-09-27 07:27:40.18872
\.


--
-- Data for Name: driver_earnings; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.driver_earnings (id, driver_id, order_id, base_earning, tip_earning, bonus_earning, total_earning, status, paid_at, created_at) FROM stdin;
\.


--
-- Data for Name: driver_incentives; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.driver_incentives (id, driver_id, order_id, incentive_type, description, amount, is_active, qualification_criteria, package_size, multi_stop_count, peak_season_multiplier, created_at, earned_at) FROM stdin;
\.


--
-- Data for Name: driver_location_pings; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.driver_location_pings (id, driver_id, order_id, location, "timestamp", is_online, is_on_delivery, battery_level, network_type, accuracy, source) FROM stdin;
\.


--
-- Data for Name: driver_order_assignments; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.driver_order_assignments (id, order_id, driver_id, assignment_type, status, offer_expires_at, responded_at, assignment_priority, estimated_distance, estimated_duration, driver_location, decline_reason, reassignment_count, metadata, created_at) FROM stdin;
1	ord_3XWeeo__AZ	14	manual	accepted	2025-09-27 01:29:12.836	2025-09-27 01:14:32.319	1	\N	\N	\N	\N	0	{}	2025-09-27 01:14:12.836
2	ord_tEDkxWVsXO	14	manual	accepted	2025-09-27 01:35:56.451	2025-09-27 01:21:05.046	1	\N	\N	\N	\N	0	{}	2025-09-27 01:20:56.451
\.


--
-- Data for Name: driver_payouts; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.driver_payouts (id, driver_id, payout_type, total_amount, fee_amount, net_amount, stripe_transfer_id, status, order_ids, tax_year, form_1099_generated, form_1099_url, created_at, completed_at) FROM stdin;
\.


--
-- Data for Name: merchant_policies; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.merchant_policies (id, merchant_id, store_name, policy, is_active, last_updated_by, notes, created_at, updated_at) FROM stdin;
1	target-corp	Target	{"refundMethod": "original_payment", "specialRules": {"apple": {"returnWindowDays": 15}, "electronics": {"returnWindowDays": 30}, "mobilePhones": {"restockingFee": {"amount": 35, "enabled": true}, "returnWindowDays": 14}, "targetBrands": {"brands": ["Cat & Jack", "Good & Gather", "Everspring", "Brightroom"], "returnWindowDays": 365}}, "tagsRequired": false, "restockingFee": {"enabled": false, "percentage": 0}, "noReceiptLimit": 100, "receiptRequired": false, "holidayExtension": {"end": "2025-01-31", "start": "2024-10-01", "enabled": true, "description": "Holiday returns extended through January"}, "returnWindowDays": 90, "allowedCategories": ["Electronics", "Clothing", "Home", "Toys", "Books", "Health & Beauty", "Sports & Outdoors", "Baby", "Grocery", "Garden & Patio"], "excludedCategories": [], "membershipBenefits": {"redcard": {"extraDays": 30, "description": "120 days total return window with RedCard"}}, "originalPackagingRequired": false}	t	system	Target return policy updated 2025 - most generous among major retailers	2025-09-27 05:16:39.611882	2025-09-27 05:16:39.611882
2	macys-inc	Macy's	{"refundMethod": "original_payment", "specialRules": {"apple": {"returnWindowDays": 14}, "beauty": {"condition": "new_or_gently_used", "description": "Beauty products accepted new or gently used"}, "jewelry": {"returnWindowDays": 30}, "areaRugs": {"returnWindowDays": 30, "storeRestriction": "Fine Rug Gallery stores only"}, "designer": {"brands": ["Gucci", "Burberry", "Louis Vuitton", "Prada"], "returnWindowDays": 14}}, "tagsRequired": false, "restockingFee": {"enabled": false, "percentage": 0}, "returnShipping": {"memberFee": 0, "nonMemberFee": 9.99}, "noReceiptRefund": "store_credit", "receiptRequired": false, "holidayExtension": {"end": "2025-01-31", "start": "2024-10-02", "enabled": true, "description": "Holiday returns extended through January 31", "appleOverride": {"end": "2025-01-07", "start": "2024-12-02"}}, "returnWindowDays": 30, "allowedCategories": ["Clothing", "Shoes", "Handbags", "Jewelry", "Beauty", "Home", "Electronics", "Furniture"], "excludedCategories": ["Last Act", "Clearance Items"], "membershipBenefits": {"starRewards": {"description": "Free return shipping for Star Rewards members", "freeShipping": true}}, "originalPackagingRequired": false}	t	system	Macy's return policy - shorter windows but flexible on condition	2025-09-27 05:16:39.70221	2025-09-27 05:16:39.70221
3	walmart-inc	Walmart	{"apiSupport": {"webhooks": true, "available": true, "description": "Full Walmart Returns API integration available"}, "refundMethod": "original_payment", "specialRules": {"tobacco": {"returnWindowDays": 0}, "firearms": {"returnWindowDays": 3}, "electronics": {"returnWindowDays": 30}, "groceryPerishable": {"returnWindowDays": 7}}, "tagsRequired": false, "restockingFee": {"enabled": false, "percentage": 0}, "receiptRequired": false, "holidayExtension": {"end": "2025-01-31", "start": "2024-10-01", "enabled": true, "description": "Extended holiday returns"}, "returnWindowDays": 90, "allowedCategories": ["Electronics", "Clothing", "Home", "Toys", "Grocery", "Health & Beauty", "Sports & Outdoors", "Baby", "Automotive", "Garden"], "excludedCategories": ["Digital Downloads", "Prescription Drugs"], "originalPackagingRequired": false}	t	system	Walmart return policy with full API integration support	2025-09-27 05:16:39.783339	2025-09-27 05:16:39.783339
4	amazon-com	Amazon	{"primeMembers": {"description": "Free return shipping for Prime members", "freeReturnShipping": true}, "refundMethod": "original_payment", "specialRules": {"books": {"returnWindowDays": 30}, "clothing": {"tryOnPolicy": true, "returnWindowDays": 30}, "electronics": {"restockingFee": {"enabled": true, "percentage": 20}, "returnWindowDays": 30, "originalPackagingRequired": true}, "digitalContent": {"returnWindowDays": 0}}, "tagsRequired": false, "restockingFee": {"enabled": true, "categories": ["Large Electronics", "Laptops"], "percentage": 20}, "receiptRequired": false, "holidayExtension": {"end": "2025-01-31", "start": "2024-11-01", "enabled": true, "description": "Holiday returns extended"}, "returnWindowDays": 30, "allowedCategories": ["Electronics", "Books", "Clothing", "Home & Kitchen", "Toys", "Health & Beauty", "Sports & Outdoors", "Baby Products"], "excludedCategories": ["Digital Content", "Gift Cards", "Grocery (perishable)", "Custom/Personalized Items"], "originalPackagingRequired": true}	t	system	Amazon return policy - varies by category with Prime benefits	2025-09-27 05:16:39.863947	2025-09-27 05:16:39.863947
5	best-buy-inc	Best Buy	{"refundMethod": "original_payment", "specialRules": {"appliances": {"returnWindowDays": 30}, "mobilePhones": {"restockingFee": {"amount": 45, "enabled": true}, "returnWindowDays": 14}, "openedSoftware": {"restockingFee": {"enabled": true, "percentage": 15}, "returnWindowDays": 15}}, "tagsRequired": false, "restockingFee": {"amount": 45, "enabled": true, "percentage": 15}, "receiptRequired": true, "holidayExtension": {"end": "2025-01-14", "start": "2024-11-01", "enabled": true, "description": "Holiday returns extended through January 14"}, "returnWindowDays": 15, "allowedCategories": ["Electronics", "Computers", "Mobile Phones", "Gaming", "Appliances", "Audio & Video", "Smart Home"], "excludedCategories": ["Digital Downloads", "Gift Cards", "Labor/Services", "Custom Installations"], "membershipBenefits": {"myBestBuy": {"extraDays": 30, "description": "My Best Buy members get extended returns"}, "totalTech": {"extraDays": 60, "description": "Totaltech members get 60+ day returns"}}, "originalPackagingRequired": true}	t	system	Best Buy electronics-focused return policy with membership tiers	2025-09-27 05:16:39.946867	2025-09-27 05:16:39.946867
\.


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.notifications (id, user_id, type, title, message, data, is_read, channel, created_at) FROM stdin;
\.


--
-- Data for Name: order_audit_logs; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.order_audit_logs (id, order_id, action, performed_by, performed_by_role, old_value, new_value, metadata, ip_address, user_agent, "timestamp") FROM stdin;
\.


--
-- Data for Name: order_cancellations; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.order_cancellations (id, order_id, cancellation_type, cancelled_by, driver_id, cancellation_reason, cancellation_details, store_id, refund_amount, driver_compensation, photos, customer_notified, driver_notified, reassign_attempted, escalated_to_support, resolution_notes, resolved_by, resolved_at, created_at) FROM stdin;
\.


--
-- Data for Name: order_status_history; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.order_status_history (id, order_id, previous_status, new_status, status_reason, triggered_by, trigger_type, driver_id, location, metadata, estimated_time, actual_time, created_at) FROM stdin;
1	ord_3XWeeo__AZ	en_route_to_store	dropped_off	Simulated E2E test: delivery completed	\N	system_test	14	\N	{"note": "E2E test dropoff"}	\N	2025-09-27 01:15:23.379	2025-09-27 01:15:23.379
2	ord_tEDkxWVsXO	accepted	picked_up	Driver started pickup (simulated)	\N	system_test	14	\N	{"note": "Simulated Start Pickup"}	\N	2025-09-27 01:21:18.934	2025-09-27 01:21:18.934
3	ord_tEDkxWVsXO	picked_up	en_route_to_store	Driver en route to store (simulated)	\N	system_test	14	\N	{"note": "Simulated Go to Store"}	\N	2025-09-27 01:21:28.291	2025-09-27 01:21:28.291
4	ord_tEDkxWVsXO	en_route_to_store	dropped_off	Simulated delivery completion	\N	system_test	14	\N	{"note": "Simulated Complete Delivery"}	\N	2025-09-27 01:21:39.77	2025-09-27 01:21:39.77
\.


--
-- Data for Name: orders; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.orders (id, user_id, status, tracking_number, pickup_address, pickup_coordinates, pickup_instructions, pickup_window, scheduled_pickup_time, actual_pickup_time, retailer, return_address, return_coordinates, item_description, item_category, item_photos, return_reason, original_order_number, base_price, surcharges, discount_code, discount_amount, total_price, tip, stripe_payment_intent_id, stripe_charge_id, payment_status, customer_paid, driver_earning, returnly_fee, size_bonus_amount, peak_season_bonus, multi_stop_bonus, driver_payout_status, driver_id, driver_assigned_at, estimated_delivery_time, actual_delivery_time, status_history, customer_notes, driver_notes, admin_notes, notifications, customer_rating, driver_rating, customer_feedback, driver_feedback, priority, is_fragile, requires_signature, insurance_value, created_at, updated_at, pickup_street_address, pickup_city, pickup_state, pickup_zip_code, retailer_location, box_size, number_of_boxes, size_upcharge, multi_box_fee, estimated_weight, tracking_enabled, tracking_expires_at, pickup_location, accepts_liability_terms, purchase_type, has_original_tags, receipt_uploaded, external_order_id, api_metadata, created_via_api, api_key_id) FROM stdin;
ord_3XWeeo__AZ	13	dropped_off	RTN-ABC12345	123 Test St, Test City, TX 12345	\N	\N	\N	\N	2025-09-27 01:14:40.886	Test Retailer	\N	\N	Return clothing item	\N	[]	\N	\N	3.99	[]	\N	0	\N	0	\N	\N	pending	\N	\N	\N	0	0	0	pending	14	\N	\N	2025-09-27 01:15:23.379	[]	\N	\N	\N	[]	\N	\N	\N	\N	standard	f	f	\N	2025-09-27 01:13:39.02	2025-09-27 01:15:23.379	\N	\N	\N	\N	\N	\N	1	0	0	\N	t	\N	\N	f	\N	f	f	\N	{}	f	\N
ord_tEDkxWVsXO	13	dropped_off	RTN-QZ_0NVU0	123 Test St, Test City, TX 12345	\N	\N	\N	\N	2025-09-27 01:21:18.934	Test Retailer	\N	\N	Return clothing item	\N	[]	\N	\N	3.99	[]	\N	0	\N	0	\N	\N	pending	\N	\N	\N	0	0	0	pending	14	\N	\N	2025-09-27 01:21:39.77	[]	\N	\N	\N	[]	\N	\N	\N	\N	standard	f	f	\N	2025-09-27 01:20:44.395	2025-09-27 01:21:39.77	\N	\N	\N	\N	\N	\N	1	0	0	\N	t	\N	\N	f	\N	f	f	\N	{}	f	\N
xEQAFNt0HQ99	10	created	\N	123 Test St	\N	\N	\N	\N	\N	Test Retailer	456 Return Rd, Returntown, RT, 67890	\N	Test shirt size M	clothing	[]	\N	\N	3.99	[]	\N	0	\N	0	\N	\N	pending	\N	\N	\N	0	0	0	pending	\N	\N	\N	\N	[]	\N	\N	\N	[]	\N	\N	\N	\N	standard	f	f	\N	2025-09-27 23:18:05.543612	2025-09-27 23:18:05.543612	\N	Testville	TS	12345	\N	\N	1	0	0	\N	t	\N	\N	f	online	f	f	\N	{}	f	\N
\.


--
-- Data for Name: promo_codes; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.promo_codes (id, code, description, discount_type, discount_value, min_order_value, max_uses, current_uses, is_active, valid_from, valid_until, created_at) FROM stdin;
\.


--
-- Data for Name: retailer_accounts; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.retailer_accounts (id, user_id, company_id, role, permissions, is_active, created_at, updated_at) FROM stdin;
1	45	1	admin	["view_orders", "manage_locations", "view_analytics"]	t	2025-10-02 18:49:33.747885	2025-10-02 18:49:33.747885
\.


--
-- Data for Name: retailer_api_keys; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.retailer_api_keys (id, company_id, name, key_prefix, key_hash, permissions, scopes, is_active, last_used_at, expires_at, rate_limit, current_usage, created_by, created_at, revoked_at) FROM stdin;
\.


--
-- Data for Name: retailer_invoices; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.retailer_invoices (id, company_id, subscription_id, stripe_invoice_id, stripe_payment_intent_id, invoice_number, invoice_date, due_date, paid_at, subtotal, tax, total, amount_paid, amount_due, line_items, status, period_start, period_end, pdf_url, notes, metadata, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: retailer_subscriptions; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.retailer_subscriptions (id, company_id, stripe_customer_id, stripe_subscription_id, stripe_price_id, plan_type, billing_cycle, monthly_fee, transaction_fee, status, current_period_start, current_period_end, cancel_at_period_end, canceled_at, included_orders, total_orders, current_month_orders, trial_ends_at, created_at, updated_at) FROM stdin;
1	1	cus_TABxrxFz76n7L2	\N	\N	standard	monthly	99	2.5	trial	2025-10-02 18:49:33.685	2025-11-01 18:49:33.685	f	\N	100	0	0	2025-10-16 18:49:33.685	2025-10-02 18:49:33.700417	2025-10-02 18:49:33.700417
\.


--
-- Data for Name: retailer_usage_metrics; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.retailer_usage_metrics (id, company_id, date, orders_created, orders_completed, orders_cancelled, total_order_value, api_requests_total, api_requests_successful, api_requests_failed, webhooks_delivered, webhooks_failed, revenue_generated, fees_charged, created_at) FROM stdin;
\.


--
-- Data for Name: retailer_webhook_deliveries; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.retailer_webhook_deliveries (id, webhook_id, event_type, order_id, request_payload, request_headers, response_status, response_body, response_headers, attempt_number, duration_ms, is_successful, error_message, next_retry_at, created_at) FROM stdin;
\.


--
-- Data for Name: retailer_webhooks; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.retailer_webhooks (id, company_id, url, name, description, secret, subscribed_events, is_active, last_triggered_at, last_success_at, last_failure_at, consecutive_failures, max_retries, retry_backoff_multiplier, timeout_seconds, metadata, created_by, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: store_locations; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.store_locations (id, retailer_name, store_name, store_number, street_address, city, state, zip_code, phone_number, coordinates, store_hours, services, return_policy, is_active, accepts_returns, has_pickup_service, max_return_value, special_instructions, last_verified, created_at, updated_at) FROM stdin;
1	Target	Target Hampton Village	T-2841	4255 Hampton Ave	Saint Louis	MO	63109	\N	{"lat": 38.5766, "lng": -90.2862}	{"friday": {"open": "07:00", "close": "23:00"}, "monday": {"open": "07:00", "close": "23:00"}, "sunday": {"open": "07:00", "close": "23:00"}, "tuesday": {"open": "07:00", "close": "23:00"}, "saturday": {"open": "07:00", "close": "23:00"}, "thursday": {"open": "07:00", "close": "23:00"}, "wednesday": {"open": "07:00", "close": "23:00"}}	["returns", "pickup", "customer-service"]	{}	t	t	f	\N	\N	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496
2	Target	Target South County	T-1509	4250 Rusty Rd	Saint Louis	MO	63128	(314) 892-6336	{"lat": 38.5301, "lng": -90.3734}	{"friday": {"open": "08:00", "close": "23:00"}, "monday": {"open": "08:00", "close": "23:00"}, "sunday": {"open": "08:00", "close": "23:00"}, "tuesday": {"open": "08:00", "close": "23:00"}, "saturday": {"open": "08:00", "close": "23:00"}, "thursday": {"open": "08:00", "close": "23:00"}, "wednesday": {"open": "08:00", "close": "23:00"}}	["returns", "pickup", "customer-service"]	{}	t	t	f	\N	\N	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496
3	Target	Target Grand Boulevard	T-2956	900 S Grand Blvd	St. Louis	MO	63103	\N	{"lat": 38.6138, "lng": -90.2324}	{"friday": {"open": "07:00", "close": "21:00"}, "monday": {"open": "07:00", "close": "21:00"}, "sunday": {"open": "07:00", "close": "21:00"}, "tuesday": {"open": "07:00", "close": "21:00"}, "saturday": {"open": "07:00", "close": "21:00"}, "thursday": {"open": "07:00", "close": "21:00"}, "wednesday": {"open": "07:00", "close": "21:00"}}	["returns", "pickup", "customer-service"]	{}	t	t	f	\N	\N	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496
4	Best Buy	Best Buy South County	#833	7017 S Lindbergh Blvd	Saint Louis	MO	63125	\N	{"lat": 38.5329, "lng": -90.3524}	{"friday": {"open": "10:00", "close": "21:00"}, "monday": {"open": "10:00", "close": "21:00"}, "sunday": {"open": "11:00", "close": "20:00"}, "tuesday": {"open": "10:00", "close": "21:00"}, "saturday": {"open": "10:00", "close": "21:00"}, "thursday": {"open": "10:00", "close": "21:00"}, "wednesday": {"open": "10:00", "close": "21:00"}}	["returns", "pickup", "customer-service", "geek-squad"]	{}	t	t	f	\N	\N	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496
5	Best Buy	Best Buy Brentwood	#830	8350 Eager Rd	Saint Louis	MO	63144	\N	{"lat": 38.5986, "lng": -90.3574}	{"friday": {"open": "10:00", "close": "21:00"}, "monday": {"open": "10:00", "close": "21:00"}, "sunday": {"open": "11:00", "close": "20:00"}, "tuesday": {"open": "10:00", "close": "21:00"}, "saturday": {"open": "10:00", "close": "21:00"}, "thursday": {"open": "10:00", "close": "21:00"}, "wednesday": {"open": "10:00", "close": "21:00"}}	["returns", "pickup", "customer-service", "geek-squad"]	{}	t	t	f	\N	\N	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496
6	Macy's	Macy's West County Center	568931	2 West County Center	St. Louis	MO	63131	\N	{"lat": 38.6285, "lng": -90.4779}	{"friday": {"open": "10:00", "close": "21:30"}, "monday": {"open": "10:00", "close": "20:00"}, "sunday": {"open": "11:00", "close": "19:00"}, "tuesday": {"open": "10:00", "close": "20:00"}, "saturday": {"open": "10:00", "close": "22:00"}, "thursday": {"open": "10:00", "close": "21:00"}, "wednesday": {"open": "10:00", "close": "20:00"}}	["returns", "customer-service", "personal-shopping"]	{}	t	t	f	\N	\N	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496	2025-09-27 00:09:49.955496
\.


--
-- Data for Name: user_sessions; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.user_sessions (sid, sess, expire) FROM stdin;
TgClXtT1lnkvosGqLW8s3ptkkniNYGg4	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T18:26:13.536Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":42,"email":"debug-QG9T@test.com","phone":"","isDriver":false,"isAdmin":false,"firstName":"Debug","lastName":"Test","dateOfBirth":""}}	2025-10-03 18:34:30
ZcgG1zUwR9bvqz6-GZFfYXRGi0TQr60w	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T02:56:16.869Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":999999,"email":"demo@returnit.demo","phone":"555-DEMO-USER","isDriver":false,"isAdmin":false,"firstName":"Demo","lastName":"User"}}	2025-10-03 03:00:54
_Ss2zo5D5FK97hfqch6Gaz_fVdNA99Y5	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T02:19:11.237Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":999999,"email":"demo@returnit.demo","phone":"555-DEMO-USER","isDriver":false,"isAdmin":false,"firstName":"Demo","lastName":"User"}}	2025-10-03 02:22:26
pKRsqL-JqWDXCjNZNy69UufudplUqTxh	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T03:04:13.365Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":999999,"email":"demo@returnit.demo","phone":"555-DEMO-USER","isDriver":false,"isAdmin":false,"firstName":"Demo","lastName":"User"}}	2025-10-03 03:09:03
JAQqdz5OoiQmdJ5KbtqKwOuwwVYgvTKu	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T02:50:00.656Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":999999,"email":"demo@returnit.demo","phone":"555-DEMO-USER","isDriver":false,"isAdmin":false,"firstName":"Demo","lastName":"User"}}	2025-10-03 02:51:27
8HIOqBwSh583EwwF412hTH1ztr5MZZG1	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T03:14:13.039Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":999999,"email":"demo@returnit.demo","phone":"555-DEMO-USER","isDriver":false,"isAdmin":false,"firstName":"Demo","lastName":"User"}}	2025-10-03 03:18:42
JtfrlRQhTbwTwAPhP32hSCR8YygxF9gQ	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T02:32:26.706Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":999999,"email":"demo@returnit.demo","phone":"555-DEMO-USER","isDriver":false,"isAdmin":false,"firstName":"Demo","lastName":"User"}}	2025-10-03 02:34:09
gq31mzVTslvrFvOyKWNgF6vgCWjFtD3g	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T18:04:08.212Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":999999,"email":"demo@returnit.demo","phone":"555-DEMO-USER","isDriver":false,"isAdmin":false,"firstName":"Demo","lastName":"User"}}	2025-10-03 18:04:24
9FC8dBQSnJZCqYBCKsT4IfWW0iH_eyxU	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T18:36:26.365Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":43,"email":"final-RaZ@test.com","phone":"","isDriver":false,"isAdmin":false,"firstName":"Final","lastName":"Test","dateOfBirth":""}}	2025-10-03 18:42:14
BuZ_1RsXGk6PitQ9nU0g_DaB6Lwk7hP7	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T02:36:32.012Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":999999,"email":"demo@returnit.demo","phone":"555-DEMO-USER","isDriver":false,"isAdmin":false,"firstName":"Demo","lastName":"User"}}	2025-10-03 02:46:22
a7EtummOnw43rathV-GJfp1i2QatqRc_	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T18:48:40.171Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":45,"email":"final-test-uj6@success.com","phone":"","isDriver":false,"isAdmin":false,"firstName":"Final","lastName":"Tester"}}	2025-10-03 18:51:21
9wuIuNFy069USR8YT_4IjbeS8zBCmyRa	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T18:44:24.024Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":44,"email":"success-l0U@test.com","phone":"","isDriver":false,"isAdmin":false,"firstName":"Success","lastName":"User"}}	2025-10-03 18:46:07
6RNIkJ02lhe4vH_0yNQYtRFmqja7-ffB	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-03T18:18:50.376Z","secure":false,"httpOnly":true,"path":"/","sameSite":"lax"},"user":{"id":41,"email":"retailer--SHH@test.com","phone":"","isDriver":false,"isAdmin":false,"firstName":"Retail","lastName":"Tester"}}	2025-10-03 18:24:14
mI4l2NBX7Sya0NOKzlBJMzyIkfhet3WT	{"cookie":{"originalMaxAge":86400000,"expires":"2025-10-02T01:24:18.662Z","secure":true,"httpOnly":true,"path":"/","sameSite":"strict"}}	2025-10-03 01:21:58
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.users (id, email, password, first_name, last_name, phone, is_driver, is_admin, is_active, profile_image, preferences, addresses, payment_methods, driver_license, vehicle_info, bank_info, driver_rating, total_earnings, completed_deliveries, is_online, current_location, stripe_connect_account_id, stripe_onboarding_complete, payment_preference, instant_pay_fee, created_at, updated_at, date_of_birth, role, department, employee_id, permissions, tutorial_completed, hire_date, assigned_city, service_zones, emergency_contacts, last_safety_check, available_hours, preferred_routes, service_radius, application_status, onboarding_step, projected_hire_date, approved_at, rejected_at, rejection_reason, otp_verified, terms_accepted_at, vehicle_make, vehicle_model, vehicle_year, vehicle_color, vehicle_type, license_plate, background_check_consent, background_check_consented_at, vehicle_insurance, background_check_status, background_check_id, background_check_completed_at, background_check_results, account_deletion_requested, data_export_requested, deleted_at, data_export_requested_at) FROM stdin;
1	nabeelmumtaz92@gmail.com	$2b$12$t4Cm8FfHm855Qz5DYXPk7eRYIYoe81dR.UuHddhClkmqePvDu6ae6	Nabeel	Mumtaz	6362544821	t	t	t	\N	{}	[]	[]	\N	\N	\N	4.9	540.75	22	f	\N	\N	f	weekly	1	2025-08-19 00:27:15.543635	2025-08-19 00:27:15.543635	\N	driver	\N	\N	[]	t	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
3	nabeelmumtaz21@gmail.com	GOOGLE_AUTH_USER	Nabeel	Mumtaz		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-08-22 03:37:36.089867	2025-08-22 03:37:36.089867	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
4	nsm2139@caa.columbia.edu	GOOGLE_AUTH_USER	Nabeel	Mumtaz		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-08-26 20:48:30.807186	2025-08-26 20:48:30.807186	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
5	nmumtaz7@gmail.com	GOOGLE_AUTH_USER	Nabeel	Mumtaz		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-08-30 21:04:53.712709	2025-08-30 21:04:53.712709	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
8	test@driver.com	$2b$12$LQv3c1yqBWVHxkd0LQ4YCOWz3BQI0C0C5/OcAh6IhPjUsz7J.oYpa	Test	Driver	+1234567890	t	f	t	\N	{}	[]	[]	\N	\N	\N	4.8	347.5	15	f	\N	\N	f	weekly	1	2025-09-26 04:39:05.158337	2025-09-26 04:39:05.158337	\N	driver	\N	\N	[]	t	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
2	nabeelmumtaz4.2@gmail.com	$2b$12$LQv3c1yqBWVHxkd0LQ4YCOWz3BQI0C0C5/OcAh6IhPjUsz7J.oYpa	Test	Driver	6362544821	t	t	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-08-19 01:10:32.710189	2025-08-19 01:10:32.710189	\N	customer	\N	\N	[]	t	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
9	testdriver@email.com	$2b$12$bLDbQBsgvw0X/nwrFyXss.BISXT99fnCJ7FRekFzFMIYtubs5nvme	Test	Driver	+1234567890	t	f	t	\N	{}	[]	[]	\N	\N	\N	4.7	425.8	18	f	\N	\N	f	weekly	1	2025-09-26 04:46:39.126043	2025-09-26 04:46:39.126043	\N	driver	\N	\N	[]	t	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
11	testdriver@test.com	$2b$12$ftLGflVQZ9Br7ltRBCCrkubpZgme6Ur9T7/LfhH/BdOQAkOo1Ez4O	Test	Driver	+15551234568	t	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-26 21:02:39.927308	2025-09-26 21:02:39.927308	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
10	testuser@test.com	$2b$12$ftLGflVQZ9Br7ltRBCCrkubpZgme6Ur9T7/LfhH/BdOQAkOo1Ez4O	Test	User	+15551234567	f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-26 21:02:38.774094	2025-09-26 21:02:38.774094	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
14	testdriver+3lPXww@example.com	$2b$10$hash	Test	Driver	000-000-0001	t	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 01:11:36.949529	2025-09-27 01:11:36.949529	\N	driver	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
13	testcustomer+GDomAv@example.com	$2b$10$CwTycUXWue0Thq9StjUM0uJ8a1lq6K/0QxY7zQe5G1u1Y6hV2b6a.	Test	Customer	000-000-0000	f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 01:11:36.903382	2025-09-27 01:11:36.903382	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
15	e2eui+S2JQUl@example.com	$2b$10$CwTycUXWue0Thq9StjUM0uJ8a1lq6K/0QxY7zQe5G1u1Y6hV2b6a.	E2E	User	\N	f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 01:22:54.317	2025-09-27 01:23:29.221	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
16	sarah.wilson.test@example.com	$2b$12$wEQKvM.efXCzzaKn1crxOeLyIkKmviYQJQU.pi2YsDy2OSwK3kiHW	Sarah	Wilson	6362555678	t	f	t	\N	"{\\"applicationStatus\\":\\"pending_review\\",\\"onboardingStep\\":\\"documents_pending\\",\\"projectedHireDate\\":\\"2025-10-11T06:13:37.931Z\\",\\"appliedAt\\":\\"2025-09-27T06:13:37.931Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"555 Test Boulevard\\",\\"city\\":\\"St. Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63103\\"}]"	[]	\N	"{\\"type\\":\\"suv\\",\\"experience\\":\\"5 years commercial driving experience\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 06:13:37.958299	2025-09-27 06:13:37.958299	1988-09-12	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
17	michael.thompson.test@example.com	$2b$12$DVVTnNXVG3FZ0aF8y/yMNOjoMI6N8vLRh7NuhwLEzhY/K4t/oXreC	Michael	Thompson	6362551234	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T06:19:35.354Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"321 Highway Drive\\",\\"city\\":\\"St. Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63102\\"}]"	[]	\N	"{\\"type\\":\\"truck\\",\\"experience\\":\\"7 years delivery and logistics experience\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 06:19:35.377002	2025-09-27 06:19:35.377002	1987-03-25	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	documents_pending	2025-10-11 06:19:35.354	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
18	james.rodriguez.test@example.com	$2b$12$47UUJ9GwE2i06L.7dfSRC.k7JLMMpu6PnVn96X/AGYZww5AqZEp9q	James	Rodriguez	6362558901	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T06:22:28.760Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"789 Express Lane\\",\\"city\\":\\"St. Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63104\\"}]"	[]	\N	"{\\"type\\":\\"van\\",\\"experience\\":\\"8 years commercial delivery experience\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 06:22:28.78284	2025-09-27 06:22:28.78284	1986-11-08	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	documents_pending	2025-10-11 06:22:28.76	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
19	maria.garcia.test@example.com	$2b$12$RfXkWuQ5HHZkMZQlyS1.C.t5LEaMr5DMPymlDdAA5uKWZJPymmkMG	Maria	Garcia	6362554567	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T06:26:56.954Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"456 Main Drive\\",\\"city\\":\\"St. Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63105\\"}]"	[]	\N	"{\\"type\\":\\"sedan\\",\\"experience\\":\\"4 years delivery experience\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 06:26:56.980588	2025-09-27 06:26:56.980588	1989-04-18	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	vehicle_info	2025-10-11 06:26:56.954	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
26	zionmodels0@gmail.com	GOOGLE_AUTH_USER	Zion	Models		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 20:38:31.223074	2025-09-27 20:38:31.223074	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
20	carlos.martinez.test@example.com	$2b$12$iT.gSeOplgwO26OvnGEguOSmlcMBzlsgFxztyIyw7VanfClP5qqC.	Carlos	Martinez	6362559012	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T07:06:25.721Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Oak Street\\",\\"city\\":\\"St. Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63106\\"}]"	[]	\N	"{\\"vehicleMake\\":\\"Toyota\\",\\"vehicleModel\\":\\"RAV4\\",\\"vehicleYear\\":\\"2021\\",\\"vehicleColor\\":\\"Silver\\",\\"licensePlate\\":\\"ABC123\\",\\"vehicleType\\":\\"suv\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 07:06:25.744544	2025-09-27 07:06:25.744544	1990-07-22	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	submitted	review	2025-10-11 07:06:25.721	\N	\N	\N	f	2025-09-27 07:09:24.036	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
21	test.driver+1759000183787@example.com	$2b$12$E.zbpK1767DCsOu0MwZSwei.A0G0FHmJZAD14wDx4wMTSIZo4U8pa	Test	Driver	6362544821	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T19:10:23.325Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Test St\\",\\"city\\":\\"St. Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63101\\"}]"	[]	\N	"{\\"type\\":\\"sedan\\",\\"experience\\":\\"3 years delivery experience\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 19:10:23.349659	2025-09-27 19:10:23.349659	1990-01-01	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	documents_pending	2025-10-11 19:10:23.325	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
22	test.driver.onboarding@example.com	$2b$12$NSLVr0VjGuNZaU/5orYcG.XNSH2Wl6g5gEEGvU/eLyW7EUeJSWohm	Test	Driver	555-123-4567	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T19:14:34.592Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Test St\\",\\"city\\":\\"Testville\\",\\"state\\":\\"TS\\",\\"zipCode\\":\\"12345\\"}]"	[]	\N	"{\\"type\\":\\"sedan\\",\\"experience\\":\\"\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 19:14:34.615901	2025-09-27 19:14:34.615901	1990-01-01	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	documents_pending	2025-10-11 19:14:34.592	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
23	john.driver.test@example.com	$2b$12$rWx7a23tCUMnunz2HQ2ZpuBocM7FNZbibej6bu0V402dLrgCqmcMy	John	Driver	555-987-6543	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T19:18:46.030Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Test St\\",\\"city\\":\\"St. Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63101\\"}]"	[]	\N	"{\\"type\\":\\"sedan\\",\\"experience\\":\\"\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 19:18:46.054277	2025-09-27 19:18:46.054277	1990-01-01	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	documents_pending	2025-10-11 19:18:46.03	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
24	demo.screenshots@example.com	$2b$12$C0NsTtpE3yc0vAEwgjjumOS4VW3HeDg3GJA8kW7uLWGpY.jOqPMIa	Demo	Driver	555-999-0001	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T20:13:51.628Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Demo St\\",\\"city\\":\\"St. Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63101\\"}]"	[]	\N	"{\\"type\\":\\"sedan\\",\\"experience\\":\\"\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 20:13:51.653811	2025-09-27 20:13:51.653811	1990-01-01	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	documents_pending	2025-10-11 20:13:51.628	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
25	demo.screenshots+1759004374349@example.com	$2b$12$YLhierzk6aqtRtl914I6ceqCfzdKTgd9LnC5Lf6mDVQWg3V1Q5n7C	Demo	Driver	555-999-0001	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T20:19:39.288Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Demo St\\",\\"city\\":\\"St. Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63101\\"}]"	[]	\N	"{\\"type\\":\\"sedan\\",\\"experience\\":\\"Experienced delivery driver.\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 20:19:39.308334	2025-09-27 20:19:39.308334	1990-01-15	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	documents_pending	2025-10-11 20:19:39.288	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
27	michael.testdriver@example.com	$2b$12$3l4JlpfW49MNK5vPJpF8PeFIHebWohgqeHTFyeQr8Mc.nZ4crEBTm	Michael	TestDriver	5555559999	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T20:44:44.675Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"789 Test Road\\",\\"city\\":\\"San Francisco\\",\\"state\\":\\"CA\\",\\"zipCode\\":\\"94105\\"}]"	[]	\N	"{\\"vehicleMake\\":\\"Ford\\",\\"vehicleModel\\":\\"F-150\\",\\"vehicleYear\\":\\"2021\\",\\"vehicleColor\\":\\"White\\",\\"licensePlate\\":\\"GHI9012\\",\\"vehicleType\\":\\"truck\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 20:44:44.699823	2025-09-27 20:44:44.699823	1987-08-20	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	rejected	vehicle_info	2025-10-11 20:44:44.675	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	failed	\N	2025-09-27 20:44:49.878	\N	f	f	\N	\N
28	nTGrB8@returnit.com	$2b$12$1YgGDPDeMfeq/MMFDTK6Sev5Y61pGR9kY1QDyKA3wdINTud8ekYIK	Test	Driver	555-123-4567	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T21:00:30.949Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Test St\\",\\"city\\":\\"Testville\\",\\"state\\":\\"TS\\",\\"zipCode\\":\\"12345\\"}]"	[]	\N	"{\\"type\\":\\"sedan\\",\\"make\\":\\"Toyota\\",\\"model\\":\\"Camry\\",\\"year\\":\\"2020\\",\\"color\\":\\"Silver\\",\\"licensePlate\\":\\"TEST123\\",\\"experience\\":\\"\\",\\"referralCode\\":\\"\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 21:00:30.974169	2025-09-27 21:00:30.974169	1990-01-01	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	waitlist	waitlist_pending	2025-10-11 21:00:30.949	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	approved	\N	2025-09-27 21:00:36.128	\N	f	f	\N	\N
29	testYhpbOu@returnit.com	$2b$12$OiEUWe5/Qy5MEbFu1BKHUu6R56k9w9gJ9ZpRZWPLpRrbUxsp5bQhK	TestDriver	User	555-987-6543	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T21:04:19.548Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Main Street, Apt 4B\\",\\"city\\":\\"Testville\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63101\\"}]"	[]	\N	"{\\"vehicleMake\\":\\"Honda\\",\\"vehicleModel\\":\\"Civic\\",\\"vehicleYear\\":\\"2021\\",\\"vehicleColor\\":\\"Blue\\",\\"licensePlate\\":\\"ABC1234\\",\\"vehicleType\\":\\"sedan\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 21:04:19.577209	2025-09-27 21:04:19.577209	1990-01-15	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	waitlist	vehicle_info	2025-10-11 21:04:19.548	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	approved	\N	2025-09-27 21:04:24.749	\N	f	f	\N	\N
43	final-RaZ@test.com	$2b$12$uATnfqO5HgFUj6srQUB/Q.0ptloJYxXj4cT2abBBerEqip6ToSaRq	Final	Test		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-10-02 18:36:26.338361	2025-10-02 18:36:26.338361		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
44	success-l0U@test.com	$2b$12$dozexm30A0PeEEGliTE8te25Zm04Aq0nQ.BMizPFmMdJ01w9Ckf6i	Success	User		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-10-02 18:43:51.117256	2025-10-02 18:43:51.117256		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
45	final-test-uj6@success.com	$2b$12$TkC42by7aM8PHqy2PO6wp.9LCIK44ATnoHAZOiCj7N2VfgjgjB222	Final	Tester		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-10-02 18:48:11.723254	2025-10-02 18:48:11.723254		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
32	completeTKC_Y9@returnit.com	$2b$12$3uh6J5iLRN9X2aMfVuMy6eQH1CVlYZOSjrjgfpLfx./CGrYSSHwye	TestComplete	Success	555-999-0000	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T21:27:59.436Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Main Street, Apt 4B\\",\\"city\\":\\"Testville\\",\\"state\\":\\"TS\\",\\"zipCode\\":\\"12345\\"}]"	[]	\N	"{\\"vehicleMake\\":\\"Ford\\",\\"vehicleModel\\":\\"F-150\\",\\"vehicleYear\\":\\"2021\\",\\"vehicleColor\\":\\"Blue\\",\\"licensePlate\\":\\"SUCCESS1\\",\\"vehicleType\\":\\"truck\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 21:27:59.461076	2025-09-27 21:27:59.461076	1990-01-01	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	waitlist	documents	2025-10-11 21:27:59.436	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	approved	\N	2025-09-27 21:28:04.623	\N	f	f	\N	\N
30	fixedOvYE4c@returnit.com	$2b$12$NMUH6u4lruvlu9cYdET/Ju21AJ7ZKagzJJipOSEI8ZVdJxCG9w8JS	TestDriver	Fixed	555-888-9999	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T21:16:57.095Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Main Street Apt 4B\\",\\"city\\":\\"St Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63101\\"}]"	[]	\N	"{\\"vehicleMake\\":\\"Toyota\\",\\"vehicleModel\\":\\"Prius\\",\\"vehicleYear\\":\\"2022\\",\\"vehicleColor\\":\\"White\\",\\"licensePlate\\":\\"TEST999\\",\\"vehicleType\\":\\"sedan\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 21:16:57.118701	2025-09-27 21:16:57.118701	1990-01-01	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	waitlist	documents	2025-10-11 21:16:57.095	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	approved	\N	2025-09-27 21:17:02.274	\N	f	f	\N	\N
33	test-oauth-security-1759013190631@example.com	$2b$12$RR2rm7rFrxV9hWbP//zhFOMJAEkyZvl.JCjJl/Ip3OgwZ4JosRHkq	Test	User		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 22:46:40.156161	2025-09-27 22:46:40.156161		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
34	test-oauth-debug-1759013404378@example.com	$2b$12$rhSajWyOOvSGXu8nyXMqW.jfwMYfdOdm4GAM3qRXsqXFAS5kJNdEe	Test	User		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 22:50:13.874738	2025-09-27 22:50:13.874738		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
35	gpt2boracay.test1@gmail.com	GOOGLE_AUTH_USER	Jhuann	Dela Cruz		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 23:52:53.285974	2025-09-27 23:52:53.285974	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
31	flowB7_2I6@returnit.com	$2b$12$C8EA5uOPlPA1pNXLDwRJd.JlQxYS54a1ru9s3QS0itFBmPdUsg08S	TestFlow	Working	555-777-8888	t	f	t	\N	"{\\"appliedAt\\":\\"2025-09-27T21:23:12.553Z\\"}"	"[{\\"type\\":\\"primary\\",\\"address\\":\\"123 Main Street, Apt 4B\\",\\"city\\":\\"Saint Louis\\",\\"state\\":\\"MO\\",\\"zipCode\\":\\"63101\\"}]"	[]	\N	"{\\"vehicleMake\\":\\"Honda\\",\\"vehicleModel\\":\\"Accord\\",\\"vehicleYear\\":\\"2023\\",\\"vehicleColor\\":\\"Black\\",\\"licensePlate\\":\\"FLOW123\\",\\"vehicleType\\":\\"sedan\\"}"	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-27 21:23:12.579825	2025-09-27 21:23:12.579825	1990-01-15	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	submitted	review	2025-10-11 21:23:12.553	\N	\N	\N	f	2025-09-27 21:25:21.965	\N	\N	\N	\N	\N	\N	f	\N	\N	approved	\N	2025-09-27 21:23:17.733	\N	f	f	\N	\N
36	testuser+1759101159981@example.com	$2b$12$BidX/qwikN99vy9qiS7DouXBnXwKS4e6ffjwROPGp6GQTF8RlBnpK	Test	User		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-28 23:12:47.163425	2025-09-28 23:12:47.163425		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
37	test+PjtSmu@example.com	$2b$12$4pLV.b1Ct/HW5vnFiLKPpOVomZxnz3YH.jHxDCmfylO1njumybK2O	Test	User		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-29 03:13:43.154493	2025-09-29 03:13:43.154493		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
38	test+y_hQj2@example.com	$2b$12$rrhSHw6f4Ox4dRimPIRJMuaMFa.m2qY2p1mRPXD8o4AxGFmIHS8CW	Test	User		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-29 03:18:48.914507	2025-09-29 03:18:48.914507		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
39	demo123@returnit.com	$2b$12$DCQEWrcp8CXp2CcqqojbG.JPo3DPQ.uPas1JUHat7uf25TE2iHZXq	Demo	User	555-123-4567	f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-29 03:30:42.590815	2025-09-29 03:30:42.590815	1990-01-01	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
40	bookingtest@test.com	$2b$10$test	Test	User	\N	f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-09-30 20:57:57.437704	2025-09-30 20:57:57.437704	\N	customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
41	retailer--SHH@test.com	$2b$12$WZPlFujugWqpz.A29WAt/e9IfjGxDV4Xz1/W1LCcpYcRdhNoa6Gdq	Retail	Tester		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-10-02 18:18:12.841677	2025-10-02 18:18:12.841677		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
42	debug-QG9T@test.com	$2b$12$byHOEcQPwsX98hq9C23H..KS4mLndKGS9Tbyym9Ow.sSN.SvdldQ2	Debug	Test		f	f	t	\N	{}	[]	[]	\N	\N	\N	5	0	0	f	\N	\N	f	weekly	1	2025-10-02 18:26:13.501672	2025-10-02 18:26:13.501672		customer	\N	\N	[]	f	\N	st-louis	[]	[]	\N	{}	[]	25	pending_review	signup	\N	\N	\N	\N	f	\N	\N	\N	\N	\N	\N	\N	f	\N	\N	not_started	\N	\N	\N	f	f	\N	\N
\.


--
-- Name: analytics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.analytics_id_seq', 1, false);


--
-- Name: app_settings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.app_settings_id_seq', 1, false);


--
-- Name: business_info_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.business_info_id_seq', 1, false);


--
-- Name: companies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.companies_id_seq', 8, true);


--
-- Name: customer_waitlist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.customer_waitlist_id_seq', 3, true);


--
-- Name: driver_earnings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.driver_earnings_id_seq', 1, false);


--
-- Name: driver_incentives_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.driver_incentives_id_seq', 1, false);


--
-- Name: driver_location_pings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.driver_location_pings_id_seq', 1, false);


--
-- Name: driver_order_assignments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.driver_order_assignments_id_seq', 2, true);


--
-- Name: driver_payouts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.driver_payouts_id_seq', 1, false);


--
-- Name: merchant_policies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.merchant_policies_id_seq', 5, true);


--
-- Name: notifications_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.notifications_id_seq', 1, false);


--
-- Name: order_audit_logs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.order_audit_logs_id_seq', 1, false);


--
-- Name: order_cancellations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.order_cancellations_id_seq', 1, false);


--
-- Name: order_status_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.order_status_history_id_seq', 4, true);


--
-- Name: promo_codes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.promo_codes_id_seq', 1, false);


--
-- Name: retailer_accounts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.retailer_accounts_id_seq', 1, true);


--
-- Name: retailer_api_keys_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.retailer_api_keys_id_seq', 1, false);


--
-- Name: retailer_invoices_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.retailer_invoices_id_seq', 1, false);


--
-- Name: retailer_subscriptions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.retailer_subscriptions_id_seq', 1, true);


--
-- Name: retailer_usage_metrics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.retailer_usage_metrics_id_seq', 1, false);


--
-- Name: retailer_webhook_deliveries_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.retailer_webhook_deliveries_id_seq', 1, false);


--
-- Name: retailer_webhooks_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.retailer_webhooks_id_seq', 1, false);


--
-- Name: store_locations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.store_locations_id_seq', 6, true);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.users_id_seq', 45, true);


--
-- Name: analytics analytics_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.analytics
    ADD CONSTRAINT analytics_pkey PRIMARY KEY (id);


--
-- Name: app_settings app_settings_key_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.app_settings
    ADD CONSTRAINT app_settings_key_key UNIQUE (key);


--
-- Name: app_settings app_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.app_settings
    ADD CONSTRAINT app_settings_pkey PRIMARY KEY (id);


--
-- Name: business_info business_info_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.business_info
    ADD CONSTRAINT business_info_pkey PRIMARY KEY (id);


--
-- Name: companies companies_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.companies
    ADD CONSTRAINT companies_pkey PRIMARY KEY (id);


--
-- Name: companies companies_slug_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.companies
    ADD CONSTRAINT companies_slug_key UNIQUE (slug);


--
-- Name: customer_waitlist customer_waitlist_email_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.customer_waitlist
    ADD CONSTRAINT customer_waitlist_email_key UNIQUE (email);


--
-- Name: customer_waitlist customer_waitlist_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.customer_waitlist
    ADD CONSTRAINT customer_waitlist_pkey PRIMARY KEY (id);


--
-- Name: driver_earnings driver_earnings_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_earnings
    ADD CONSTRAINT driver_earnings_pkey PRIMARY KEY (id);


--
-- Name: driver_incentives driver_incentives_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_incentives
    ADD CONSTRAINT driver_incentives_pkey PRIMARY KEY (id);


--
-- Name: driver_location_pings driver_location_pings_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_location_pings
    ADD CONSTRAINT driver_location_pings_pkey PRIMARY KEY (id);


--
-- Name: driver_order_assignments driver_order_assignments_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_order_assignments
    ADD CONSTRAINT driver_order_assignments_pkey PRIMARY KEY (id);


--
-- Name: driver_payouts driver_payouts_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_payouts
    ADD CONSTRAINT driver_payouts_pkey PRIMARY KEY (id);


--
-- Name: merchant_policies merchant_policies_merchant_id_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.merchant_policies
    ADD CONSTRAINT merchant_policies_merchant_id_key UNIQUE (merchant_id);


--
-- Name: merchant_policies merchant_policies_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.merchant_policies
    ADD CONSTRAINT merchant_policies_pkey PRIMARY KEY (id);


--
-- Name: notifications notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (id);


--
-- Name: order_audit_logs order_audit_logs_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_audit_logs
    ADD CONSTRAINT order_audit_logs_pkey PRIMARY KEY (id);


--
-- Name: order_cancellations order_cancellations_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_cancellations
    ADD CONSTRAINT order_cancellations_pkey PRIMARY KEY (id);


--
-- Name: order_status_history order_status_history_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_status_history
    ADD CONSTRAINT order_status_history_pkey PRIMARY KEY (id);


--
-- Name: orders orders_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (id);


--
-- Name: orders orders_tracking_number_unique; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_tracking_number_unique UNIQUE (tracking_number);


--
-- Name: promo_codes promo_codes_code_unique; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.promo_codes
    ADD CONSTRAINT promo_codes_code_unique UNIQUE (code);


--
-- Name: promo_codes promo_codes_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.promo_codes
    ADD CONSTRAINT promo_codes_pkey PRIMARY KEY (id);


--
-- Name: retailer_accounts retailer_accounts_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_accounts
    ADD CONSTRAINT retailer_accounts_pkey PRIMARY KEY (id);


--
-- Name: retailer_api_keys retailer_api_keys_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_api_keys
    ADD CONSTRAINT retailer_api_keys_pkey PRIMARY KEY (id);


--
-- Name: retailer_invoices retailer_invoices_invoice_number_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_invoices
    ADD CONSTRAINT retailer_invoices_invoice_number_key UNIQUE (invoice_number);


--
-- Name: retailer_invoices retailer_invoices_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_invoices
    ADD CONSTRAINT retailer_invoices_pkey PRIMARY KEY (id);


--
-- Name: retailer_invoices retailer_invoices_stripe_invoice_id_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_invoices
    ADD CONSTRAINT retailer_invoices_stripe_invoice_id_key UNIQUE (stripe_invoice_id);


--
-- Name: retailer_subscriptions retailer_subscriptions_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_subscriptions
    ADD CONSTRAINT retailer_subscriptions_pkey PRIMARY KEY (id);


--
-- Name: retailer_subscriptions retailer_subscriptions_stripe_customer_id_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_subscriptions
    ADD CONSTRAINT retailer_subscriptions_stripe_customer_id_key UNIQUE (stripe_customer_id);


--
-- Name: retailer_subscriptions retailer_subscriptions_stripe_subscription_id_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_subscriptions
    ADD CONSTRAINT retailer_subscriptions_stripe_subscription_id_key UNIQUE (stripe_subscription_id);


--
-- Name: retailer_usage_metrics retailer_usage_metrics_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_usage_metrics
    ADD CONSTRAINT retailer_usage_metrics_pkey PRIMARY KEY (id);


--
-- Name: retailer_webhook_deliveries retailer_webhook_deliveries_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_webhook_deliveries
    ADD CONSTRAINT retailer_webhook_deliveries_pkey PRIMARY KEY (id);


--
-- Name: retailer_webhooks retailer_webhooks_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_webhooks
    ADD CONSTRAINT retailer_webhooks_pkey PRIMARY KEY (id);


--
-- Name: user_sessions session_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.user_sessions
    ADD CONSTRAINT session_pkey PRIMARY KEY (sid);


--
-- Name: store_locations store_locations_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.store_locations
    ADD CONSTRAINT store_locations_pkey PRIMARY KEY (id);


--
-- Name: users users_email_unique; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_unique UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: IDX_session_expire; Type: INDEX; Schema: public; Owner: neondb_owner
--

CREATE INDEX "IDX_session_expire" ON public.user_sessions USING btree (expire);


--
-- Name: app_settings app_settings_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.app_settings
    ADD CONSTRAINT app_settings_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.users(id);


--
-- Name: driver_earnings driver_earnings_driver_id_users_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_earnings
    ADD CONSTRAINT driver_earnings_driver_id_users_id_fk FOREIGN KEY (driver_id) REFERENCES public.users(id);


--
-- Name: driver_earnings driver_earnings_order_id_orders_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_earnings
    ADD CONSTRAINT driver_earnings_order_id_orders_id_fk FOREIGN KEY (order_id) REFERENCES public.orders(id);


--
-- Name: driver_incentives driver_incentives_driver_id_users_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_incentives
    ADD CONSTRAINT driver_incentives_driver_id_users_id_fk FOREIGN KEY (driver_id) REFERENCES public.users(id);


--
-- Name: driver_incentives driver_incentives_order_id_orders_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_incentives
    ADD CONSTRAINT driver_incentives_order_id_orders_id_fk FOREIGN KEY (order_id) REFERENCES public.orders(id);


--
-- Name: driver_location_pings driver_location_pings_driver_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_location_pings
    ADD CONSTRAINT driver_location_pings_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id);


--
-- Name: driver_location_pings driver_location_pings_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_location_pings
    ADD CONSTRAINT driver_location_pings_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id);


--
-- Name: driver_order_assignments driver_order_assignments_driver_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_order_assignments
    ADD CONSTRAINT driver_order_assignments_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id);


--
-- Name: driver_order_assignments driver_order_assignments_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_order_assignments
    ADD CONSTRAINT driver_order_assignments_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id);


--
-- Name: driver_payouts driver_payouts_driver_id_users_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.driver_payouts
    ADD CONSTRAINT driver_payouts_driver_id_users_id_fk FOREIGN KEY (driver_id) REFERENCES public.users(id);


--
-- Name: notifications notifications_user_id_users_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_user_id_users_id_fk FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: order_audit_logs order_audit_logs_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_audit_logs
    ADD CONSTRAINT order_audit_logs_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id);


--
-- Name: order_audit_logs order_audit_logs_performed_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_audit_logs
    ADD CONSTRAINT order_audit_logs_performed_by_fkey FOREIGN KEY (performed_by) REFERENCES public.users(id);


--
-- Name: order_cancellations order_cancellations_cancelled_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_cancellations
    ADD CONSTRAINT order_cancellations_cancelled_by_fkey FOREIGN KEY (cancelled_by) REFERENCES public.users(id);


--
-- Name: order_cancellations order_cancellations_driver_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_cancellations
    ADD CONSTRAINT order_cancellations_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id);


--
-- Name: order_cancellations order_cancellations_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_cancellations
    ADD CONSTRAINT order_cancellations_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id);


--
-- Name: order_cancellations order_cancellations_resolved_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_cancellations
    ADD CONSTRAINT order_cancellations_resolved_by_fkey FOREIGN KEY (resolved_by) REFERENCES public.users(id);


--
-- Name: order_cancellations order_cancellations_store_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_cancellations
    ADD CONSTRAINT order_cancellations_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.store_locations(id);


--
-- Name: order_status_history order_status_history_driver_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_status_history
    ADD CONSTRAINT order_status_history_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id);


--
-- Name: order_status_history order_status_history_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_status_history
    ADD CONSTRAINT order_status_history_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id);


--
-- Name: order_status_history order_status_history_triggered_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_status_history
    ADD CONSTRAINT order_status_history_triggered_by_fkey FOREIGN KEY (triggered_by) REFERENCES public.users(id);


--
-- Name: orders orders_api_key_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_api_key_id_fkey FOREIGN KEY (api_key_id) REFERENCES public.retailer_api_keys(id);


--
-- Name: orders orders_driver_id_users_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_driver_id_users_id_fk FOREIGN KEY (driver_id) REFERENCES public.users(id);


--
-- Name: orders orders_user_id_users_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_user_id_users_id_fk FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: retailer_accounts retailer_accounts_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_accounts
    ADD CONSTRAINT retailer_accounts_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id);


--
-- Name: retailer_accounts retailer_accounts_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_accounts
    ADD CONSTRAINT retailer_accounts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: retailer_api_keys retailer_api_keys_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_api_keys
    ADD CONSTRAINT retailer_api_keys_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id);


--
-- Name: retailer_api_keys retailer_api_keys_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_api_keys
    ADD CONSTRAINT retailer_api_keys_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id);


--
-- Name: retailer_invoices retailer_invoices_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_invoices
    ADD CONSTRAINT retailer_invoices_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id);


--
-- Name: retailer_invoices retailer_invoices_subscription_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_invoices
    ADD CONSTRAINT retailer_invoices_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.retailer_subscriptions(id);


--
-- Name: retailer_subscriptions retailer_subscriptions_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_subscriptions
    ADD CONSTRAINT retailer_subscriptions_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id);


--
-- Name: retailer_usage_metrics retailer_usage_metrics_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_usage_metrics
    ADD CONSTRAINT retailer_usage_metrics_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id);


--
-- Name: retailer_webhook_deliveries retailer_webhook_deliveries_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_webhook_deliveries
    ADD CONSTRAINT retailer_webhook_deliveries_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id);


--
-- Name: retailer_webhook_deliveries retailer_webhook_deliveries_webhook_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_webhook_deliveries
    ADD CONSTRAINT retailer_webhook_deliveries_webhook_id_fkey FOREIGN KEY (webhook_id) REFERENCES public.retailer_webhooks(id);


--
-- Name: retailer_webhooks retailer_webhooks_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_webhooks
    ADD CONSTRAINT retailer_webhooks_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id);


--
-- Name: retailer_webhooks retailer_webhooks_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.retailer_webhooks
    ADD CONSTRAINT retailer_webhooks_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id);


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: cloud_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO neon_superuser WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: cloud_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON TABLES TO neon_superuser WITH GRANT OPTION;


--
-- PostgreSQL database dump complete
--

